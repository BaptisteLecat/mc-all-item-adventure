plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
}


group = 'fr.dreamin'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "https://repo.papermc.io/repository/maven-public/" }
  maven { url "https://oss.sonatype.org/content/groups/public/" }
}

dependencies {
  compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
  implementation files("libs/mctools.jar")

  implementation 'com.google.code.gson:gson:2.8.9'
  compileOnly ('org.projectlombok:lombok:1.18.30')
  annotationProcessor ('org.projectlombok:lombok:1.18.30')
}

def targetJavaVersion = 21
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'

  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release.set(targetJavaVersion)
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}

if (project.hasProperty("testEnv") && project.testEnv == "true") {
  setLibsDirName("../test-server/plugins")
  println("Test environment setup")
} else {
  println "Skipping test environment setup"
}
